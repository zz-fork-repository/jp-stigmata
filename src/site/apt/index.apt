 ----
 Java birthmark toolkit
 ----
 Haruaki Tamada
 ----
 2006-12-12
 ----

Overview

 Stigmata is rewrite almost every source code based on <<<jbirth>>>
which available at http://se.naist.jp/jbirth.  Stigmata aims to detect
the theft of programs, too.  This tool can extract birthmarks from
Java class files, and compare them.  Differences from <<<jbirth>>> are

 * using spi (service provider interface) architecture for birthmark implementation

 * using {{{http://asm.objectweb.org/}ASM}} instead of {{{http://jakarta.apache.org}BCEL}}.

 * introduce birthmarking context

 []

 A <birthmark> is a set of special informations that the program
originally possesses.  A birthmark is carefully extracted from
critical portions of class file. Hence, if a class file <p> has the
same birthmark as another class file <q>'s, <q> is very likely to be a
copy of <p>. Thus, the birthmark can be used as a simple but powerful
signature to distinguish doubtful class files (those which seem to be
copies).

Features

 <<<Stigmata>>> support the extracting birthmarks from Java class
files, and written in Java 5 with ASM.

 The main features are:

 * extraction of the four types of birthmarks directly from Java class files (without source code),

 * pairwise birthmark comparison of Java class files,

 * Jar file and War file support, and

 * plug-in architecture for new birthmarks

Download

*License

 Stigmata: Java birthmarking toolkit

 Apache License 2.0

 Copyright (C) 2006-2007  Haruaki TAMADA

 Licensed under the Apache License, Version 2.0 (the "License"); you
may not use this file except in compliance with the License. You may
obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
implied. See the License for the specific language governing
permissions and limitations under the License.

*Requirements

 *{{{http://asm.objectweb.org/}ASM}} 2.2.3

 *{{{http://commons.cafebabe.jp/xmlcli/}Jakarta Commons CLI}} 1.0

 *{{{http://commons.cafebabe.jp/xmlcli/}XmlCli}} 1.0

 []

*Manually download

 You can download release build from {{{http://sourceforge.jp/}sourceforge.jp}}. 

 {{{https://sourceforge.jp/projects/stigmata/files/}Download}}

*Binary download by maven2 

 You can get a jar file of stigmata by Maven2 using below setting.
First, add remote repository entry to repositories tag in `pom.xml.'
Next, add dependency tag entry to dependencies tag in `pom.xml.'

----
<project>
    :
  <repositories>
    <repository>
      <id>stigmata.sourceforge.jp</id>
      <name>Stigmata Maven2 Repository in sourceforge.jp</name>
      <url>http://stigmata.sourceforge.jp/maven2</url>
    </repository>
  </repositories>
    :

    :
  <dependencies>
      :
    <dependency>
      <groupId>jp.naist.se</groupId>
      <artifactId>stigmata</artifactId>
      <version>1.0-beta</version>
    </dependency>
      :
  </dependencies>
    :
</project>
----

*SCM

**Subversion

 The source can be checked out anonymously from Subversion.

----
$ svn checkout http://svn.sourceforge.jp/svnroot/stigmata/trunk/ stigmata
----

**Web access

 You can brouse the source code from following link.

 http://svn.sourceforge.jp/cgi-bin/viewcvs.cgi/?root=stigmata

Related Publications

 * Haruaki Tamada, Yuichiro Kanzaki, Masahide Nakamura, Akito Monden,
   Ken-ichi Matsumoto, "A method for extracting program fingerprints
   from Java class files," The Institute of Electronics, Information
   and Communication Engineers Technical Report, Vol. ISEC2003-29,
   pp.127-133, July 2003. (in Japanese)

 * Haruaki Tamada, Masahide Nakamura, Akito Monden, and Ken-ichi
   Matsumoto, "Detecting the theft of programs using birthmarks,"
   Information Science Technical Report, NAIST-IS-TR2003014, ISSN
   0919-9527, Graduate School of Information Science, Nara Institute
   of Science and Technology, November 2003.

 * Haruaki Tamada, Masahide Nakamura, Akito Monden, and Ken-ichi
   Matsumoto, "Design and evaluation of birthmarks for detecting theft
   of Java programs," Proc. IASTED International Conference on
   Software Engineering
   ({{{http://www.iasted.org/conferences/2004/Innsbruck/se.htm}IASTED
   SE 2004}}), pp.569-575, Innsbruck,
   Austria, 17-19 February 2004.

 * Masateru Tsunoda, Takeshi Kakimoto, Naoki Ohsugi, Akito Monden, and
   Ken-ichi Matsumoto, "Javawock: A Java Class Recommender System
   Based on Collaborative Filtering," In Proc. of 17th International
   Conference on Software Engineering and Knowledge Engineering
   ({{{http://www.ksi.edu/seke/seke05.html}SEKE2005}}), pp.491-497,
   July 2005. (Taipei, Taiwan)

 * Haruaki Tamada, Masahide Nakamura, Akito Monden, and Ken-ichi
   Matsumoto, "Java Birthmarks --Detecting the Software Theft--,"
   IEICE Transactions on Information and Systems, Vol. E88-D, No. 9,
   September 2005.

 * Takesi Kakimoto, Akito Monden, Yasutaka Kamei, Haruaki Tamada,
   Masateru Tsunoda, and Ken-ichi Matsumoto, "Using Software
   Birthmarks to Identify Similar Classes and Major Functionalities,"
   In Proc. the 3rd International Workshop on Mining Software
   Repositories ({{{http://msr.uwaterloo.ca/msr2006/}MSR Mining
   Challenge 2006}}), pp.171--172, Shanghai, China, May
   2006.

Related Tools

*Watermarking Tools

 *{{{http://www.cs.arizona.edu/sandmark/}SandMark: A Tool for the Study of Software Protection Algorithms}}

 *{{{http://se.naist.jp/jmark/}jmark: A lightweight tool for watermarking Java class files}}

*Obfuscator

 *{{{http://www.codingart.com/codeshield.html}CodeShield: A command line byte code obfuscator that works with your build environment}}

 *{{{http://www.condensity.com/}Condensity v.2.0 is the latest and most powerful version of our world-class Java obfuscation utility.}}

 *{{{http://www.preemptive.com/products/dasho/index.html}DashO - the Premier Java Obfuscator and Efficiency Enhancing Tool}}

 *{{{http://www.duckware.com/jobfuscate/}Jobfuscate}}

 *{{{http://www.jproof.com/}JProof}}

 *{{{http://www.e-t.com/jshrink.html}JShrink}}

 *{{{http://www.drjava.de/obfuscator/}Marvin Obfuscator }}

 *{{{http://proguard.sourceforge.net/}ProGuard}}

 *{{{http://www.retrologic.com/retroguard-main.html}RetroGuard - Java Bytecode Obfuscation}}

 *{{{http://www.leesw.com/smokescreen/index.html}Smokescreen Java Class File Obfuscator}}

 *{{{http://www.yworks.com/en/products_yguard_about.htm}yGuard Java Bytecode Obfuscator}}

 *{{{http://www.zelix.com/klassmaster/}Zelix KlassMaster: The Second Generation Java Obfuscator}}

 *{{{http://donquixote.cafebabe.jp}DonQuixote}}

Contact

 Contact me by emal \<harua-t[ at ]is.naist.jp\>.

 *{{{http://sourceforge.jp/developer/sendmessage.php?touser=587}Email sending form}}

[]